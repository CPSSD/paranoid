// Code generated by protoc-gen-go.
// source: discoverynetwork/discovery.proto
// DO NOT EDIT!

/*
Package discoverynetwork is a generated protocol buffer package.

It is generated from these files:
	discoverynetwork/discovery.proto

It has these top-level messages:
	EmptyMessage
	DisconnectRequest
	JoinRequest
	JoinResponse
	Node
*/
package discoverynetwork

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EmptyMessage struct {
}

func (m *EmptyMessage) Reset()                    { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string            { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()               {}
func (*EmptyMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DisconnectRequest struct {
	Node *Node `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
}

func (m *DisconnectRequest) Reset()                    { *m = DisconnectRequest{} }
func (m *DisconnectRequest) String() string            { return proto.CompactTextString(m) }
func (*DisconnectRequest) ProtoMessage()               {}
func (*DisconnectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DisconnectRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type JoinRequest struct {
	Pool string `protobuf:"bytes,1,opt,name=pool" json:"pool,omitempty"`
	Node *Node  `protobuf:"bytes,2,opt,name=node" json:"node,omitempty"`
}

func (m *JoinRequest) Reset()                    { *m = JoinRequest{} }
func (m *JoinRequest) String() string            { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()               {}
func (*JoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *JoinRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type JoinResponse struct {
	// The time after which the server will remove the node from the list
	// if the node doesn't make the Renew RPC call
	ResetInterval int64   `protobuf:"varint,1,opt,name=reset_interval" json:"reset_interval,omitempty"`
	Nodes         []*Node `protobuf:"bytes,2,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *JoinResponse) Reset()                    { *m = JoinResponse{} }
func (m *JoinResponse) String() string            { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()               {}
func (*JoinResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *JoinResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Node struct {
	Ip         string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port       string `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
	CommonName string `protobuf:"bytes,3,opt,name=common_name" json:"common_name,omitempty"`
	Uuid       string `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*EmptyMessage)(nil), "discoverynetwork.EmptyMessage")
	proto.RegisterType((*DisconnectRequest)(nil), "discoverynetwork.DisconnectRequest")
	proto.RegisterType((*JoinRequest)(nil), "discoverynetwork.JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "discoverynetwork.JoinResponse")
	proto.RegisterType((*Node)(nil), "discoverynetwork.Node")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for DiscoveryNetwork service

type DiscoveryNetworkClient interface {
	// Discovery Calls
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*EmptyMessage, error)
}

type discoveryNetworkClient struct {
	cc *grpc.ClientConn
}

func NewDiscoveryNetworkClient(cc *grpc.ClientConn) DiscoveryNetworkClient {
	return &discoveryNetworkClient{cc}
}

func (c *discoveryNetworkClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := grpc.Invoke(ctx, "/discoverynetwork.DiscoveryNetwork/Join", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryNetworkClient) Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := grpc.Invoke(ctx, "/discoverynetwork.DiscoveryNetwork/Disconnect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DiscoveryNetwork service

type DiscoveryNetworkServer interface {
	// Discovery Calls
	Join(context.Context, *JoinRequest) (*JoinResponse, error)
	Disconnect(context.Context, *DisconnectRequest) (*EmptyMessage, error)
}

func RegisterDiscoveryNetworkServer(s *grpc.Server, srv DiscoveryNetworkServer) {
	s.RegisterService(&_DiscoveryNetwork_serviceDesc, srv)
}

func _DiscoveryNetwork_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(DiscoveryNetworkServer).Join(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _DiscoveryNetwork_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DisconnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(DiscoveryNetworkServer).Disconnect(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _DiscoveryNetwork_serviceDesc = grpc.ServiceDesc{
	ServiceName: "discoverynetwork.DiscoveryNetwork",
	HandlerType: (*DiscoveryNetworkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _DiscoveryNetwork_Join_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _DiscoveryNetwork_Disconnect_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x9b, 0x26, 0x0a, 0x9d, 0x84, 0x52, 0x47, 0x28, 0x41, 0x50, 0x4a, 0x54, 0xf0, 0x14,
	0xa1, 0x9e, 0x3c, 0x8a, 0x15, 0x41, 0x68, 0x0f, 0xfa, 0x00, 0x25, 0x26, 0x83, 0x04, 0xcd, 0xce,
	0xba, 0xbb, 0xa9, 0xf4, 0xad, 0x7c, 0x44, 0xbb, 0x89, 0xa9, 0xda, 0xd8, 0x9e, 0x96, 0xdd, 0xf9,
	0xe7, 0xdb, 0x7f, 0xe6, 0x87, 0x51, 0x96, 0xeb, 0x94, 0x17, 0xa4, 0x96, 0x82, 0xcc, 0x07, 0xab,
	0xd7, 0xcb, 0xf5, 0x43, 0x2c, 0x15, 0x1b, 0xc6, 0xc1, 0xa6, 0x22, 0xea, 0x43, 0x70, 0x57, 0x48,
	0xb3, 0x9c, 0x92, 0xd6, 0xc9, 0x0b, 0x45, 0xd7, 0x70, 0x30, 0xb1, 0x1a, 0x21, 0x28, 0x35, 0x8f,
	0xf4, 0x5e, 0x92, 0x36, 0x78, 0x06, 0x9e, 0xe0, 0x8c, 0x42, 0x67, 0xe4, 0x5c, 0xf8, 0xe3, 0x61,
	0xbc, 0x49, 0x89, 0x67, 0xab, 0x6a, 0x74, 0x03, 0xfe, 0x03, 0xe7, 0xa2, 0x69, 0x0a, 0xc0, 0x93,
	0xcc, 0x6f, 0x55, 0x53, 0x6f, 0x8d, 0xe8, 0xee, 0x44, 0x4c, 0x21, 0xa8, 0x11, 0x5a, 0xb2, 0xd0,
	0x84, 0x43, 0xe8, 0x2b, 0xd2, 0x64, 0xe6, 0xb9, 0x30, 0xa4, 0x16, 0x49, 0x4d, 0x73, 0xf1, 0x1c,
	0xf6, 0x2c, 0x4d, 0xaf, 0x70, 0xee, 0x0e, 0xdc, 0x2d, 0x78, 0xf6, 0x44, 0x80, 0x6e, 0x2e, 0xbf,
	0x8d, 0x54, 0xb6, 0x94, 0xa9, 0x8c, 0xf4, 0xf0, 0x10, 0xfc, 0x94, 0x8b, 0x82, 0xc5, 0x5c, 0x24,
	0x05, 0x85, 0x6e, 0x23, 0x29, 0xcb, 0x3c, 0x0b, 0x3d, 0x7b, 0x1b, 0x7f, 0x3a, 0x30, 0x98, 0x34,
	0xf8, 0x59, 0x8d, 0xc7, 0x7b, 0xf0, 0xac, 0x51, 0x3c, 0x6e, 0xff, 0xfc, 0x6b, 0x07, 0x47, 0x27,
	0xdb, 0xca, 0xf5, 0x7c, 0x51, 0x07, 0x9f, 0x00, 0x7e, 0xf6, 0x8d, 0xa7, 0x6d, 0x7d, 0x2b, 0x8d,
	0xff, 0xa0, 0x7f, 0x22, 0xec, 0x3c, 0xef, 0x57, 0x69, 0x5f, 0x7d, 0x05, 0x00, 0x00, 0xff, 0xff,
	0x07, 0x72, 0x80, 0x0c, 0x11, 0x02, 0x00, 0x00,
}
