syntax = "proto3";

package paranoid;

service ParanoidNetwork {
    // Pings the server to confirm it is up
    rpc Ping (EmptyMessage) returns (EmptyMessage) {}

    // Creat syscall
    rpc Creat (CreatRequest) returns (EmptyMessage) {}

    // Write syscall
    rpc Write (WriteRequest) returns (WriteResponse) {}

    // Link syscall
    rpc Link (LinkRequest) returns (EmptyMessage) {}

    // Unlink syscall
    rpc Unlink (UnlinkRequest) returns (EmptyMessage) {}

    // Rename syscall
    rpc Rename (RenameRequest) returns (EmptyMessage) {}

    // Truncate syscall
    rpc Truncate (TruncateRequest) returns (EmptyMessage) {}

    // Utimes syscall
    rpc Utimes (UtimesRequest) returns (EmptyMessage) {}

    // Chmod syscall
    rpc Chmod (ChmodRequest) returns (EmptyMessage) {}
}

message EmptyMessage {}

message CreatRequest {
    string path = 1;  // required
}

message WriteRequest {
    string path = 1;  // required
    bytes data = 2;  // required

    uint64 offset = 3;  // optional
    uint64 length = 4;  // optional
}

message WriteResponse {
    uint64 bytes_written = 1;  // required
}

message LinkRequest {
    string old_path = 1;  // required
    string new_path = 2;  // required
}

message UnlinkRequest {
    string path = 1;  // required
}

message RenameRequest {
    string old_path = 1;  // required
    string new_path = 2;  // required
}

message TruncateRequest {
    string path = 1;  // required
    uint64 length = 2;  // required
}

message UtimesRequest {
    string path = 1;

    uint64 access_seconds = 2;  // required
    uint64 access_microseconds = 3;  // required

    uint64 modify_seconds = 4;  // required
    uint64 modify_microseconds = 5;  // required
}

message ChmodRequest {
    string path = 1;  // required
    uint32 mode = 2;  // required
}
